describe("A group of tests", function() {

    // definir variáveis a usar nos testes  
    var stack;

    // isto é executado antes de cada teste
    beforeEach(function() {
        // fazer coisas
    });

    afterEach(function() {
        foo = 0;
    });

    beforeAll(function() {
        foo = 1;
    });

    afterAll(function() {
        foo = 0;
    });

    // not executed
    xdescribe("A group of tests - not executed", function() {});

    it("can have more than one expectation", function() {
        expect(foo).toEqual(1);
        expect(true).toEqual(true);
    });

    xit("Is marked as pending", function() {});

    describe("A nested group of tests", function() {
        // Before a spec is executed, Jasmine walks down the tree executing each beforeEach function in order.
        // After the spec is executed, Jasmine walks through the afterEach functions similarly.

    });

    it("Shopuld be true", function() {
        expect(Array.isArray(stack.stackControl)).toBe(true);
    });

    it("Should be a number", function() {
        expect(typeof(stack.MAX_SIZE)).toBe('number');
    });

    it("Should be a function", function() {
        expect(typeof(stack.isEmpty)).toBe('function');
    });

    it("Should be one", function() {
        expect(stack.stackControl.length).toBe(1);
    });

    it("Should insert the elements in the received order", function() {
        expect(stack.stackControl).toEqual([19, 88]);
    });

});